import java.io.*;
import java.math.*;
import java.text.*;
import java.util.*;
import java.util.regex.*;

public class Solution {

    /*
     * Complete the indianJob function below.
     */
   static String indianJob(int g, int[] ar) {
        /*
         * Write your code here.
         */
        int n = ar.length;
        int[][] dp = new int[n+1][g+1];
        int sum = 0;
        for(int i = 0; i < n; i++){
            sum += ar[i];
        }
        
        for(int i = 1; i <= n; i++){
            for(int j = 1; j <= g; j++){
                if(ar[i-1] <= j){
                    dp[i][j] = Math.max(dp[i-1][j], ar[i-1] + dp[i-1][j - ar[i-1]]);
                }
                else{
                    dp[i][j] = dp[i-1][j];
                }
            }
        }
        if(sum-dp[n][g] <= g){
            return "YES";
        }
        else
            return "NO";
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int t = Integer.parseInt(scanner.nextLine().trim());

        for (int tItr = 0; tItr < t; tItr++) {
            String[] ng = scanner.nextLine().split(" ");

            int n = Integer.parseInt(ng[0].trim());

            int g = Integer.parseInt(ng[1].trim());

            int[] arr = new int[n];

            String[] arrItems = scanner.nextLine().split(" ");

            for (int arrItr = 0; arrItr < n; arrItr++) {
                int arrItem = Integer.parseInt(arrItems[arrItr].trim());
                arr[arrItr] = arrItem;
            }

            String result = indianJob(g, arr);

            bufferedWriter.write(result);
            bufferedWriter.newLine();
        }

        bufferedWriter.close();
    }
}
